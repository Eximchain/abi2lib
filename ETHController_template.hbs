let Connector = require("./GenericETHConnector");
let fs = require("fs");

/**
* @class
* @classdesc - interface to interact with ETH Connector for all methods
* */
class Controller{

    /**
    * @constructor
    * @description initializes the connector, which will interact with SmartContract via web3
    * */
    constructor(){
        this.config = JSON.parse(fs.readFileSync("./config.json"));
        this.connector = new Connector("./contract.json", this.config);
    }

    {{#each abi}}
    {{#ifEquals type "function"}}
    {{#if inputs.length}}
    /**
    * @function
    * @instance
    * @param { address } from - from address
    {{#if payable}}
    * @param { Number } value - eth to be sent
    {{/if}}
    {{#each inputs}}
    * @param { {{type}} } name
    {{/each}}
    * @description execute post method as a transaction on {{name}}
    * @returns { Promise }
    * */
    post_{{name}}(from{{#if payable}}, value{{/if}}, {{#each inputs}}name{{/each}} ){
        return this.connector.write("{{name}}", from, {{#if payable}}value{{else}}null{{/if}}, [ {{#each inputs}}name{{/each}} ]);
    }
    {{/if}}

    {{#if outputs.length}}
    /**
    * @function
    * @instance
    * @param { address } from - from address
    {{#each inputs}}
    * @param { {{type}} } name
    {{/each}}
    * @description execute get method without a transaction on {{name}}
    * @returns { Promise }
    * */
    get_{{name}}(from, {{#each inputs}}name{{/each}} ){
        return this.connector.read("{{name}}", from, [ {{#each inputs}}name{{/each}} ]);
    }
    {{/if}}

        {{/ifEquals}}
    {{/each}}

}

module.exports = Controller;